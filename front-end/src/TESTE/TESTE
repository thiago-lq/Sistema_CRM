{/*}
import { useState, useEffect } from "react";
import CadastroClientes from "./CadastroClientes";

// 1. DADOS FALSOS (MOCK DATA)
// Este array simula a resposta que viria da sua API.
const mockClientes = [
  {
    id: 1,
    nome: "Ana Beatriz",
    email: "ana.beatriz@email.com",
    telefone: "(38) 99999-1111",
  },
  {
    id: 2,
    nome: "Carlos Eduardo",
    email: "carlos.edu@email.com",
    telefone: "(38) 98888-2222",
  },
  {
    id: 3,
    nome: "Fernanda Costa",
    email: "fernanda.costa@email.com",
    telefone: "(38) 97777-3333",
  },
];

export default function Clientes() {
  const [tab, setTab] = useState("clientes");
  const [clientes, setClientes] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // 2. MODIFICAMOS O useEffect PARA SIMULAR A CHAMADA DA API
  useEffect(() => {
    if (tab === "clientes") {
      const simulaFetchClientes = () => {
        console.log("Simulando busca de clientes...");
        setLoading(true);
        setError(null);

        // setTimeout simula a demora da rede (ex: 1.5 segundos)
        setTimeout(() => {
          try {
            // Aqui você pode até simular um erro, se quiser
            // Ex: if (Math.random() > 0.5) { throw new Error(...) }
            
            setClientes(mockClientes); // Usamos os dados falsos
            setLoading(false);         // Finaliza o carregamento
            console.log("Clientes carregados com sucesso (simulação).");
          } catch (err) {
            setError("Ocorreu um erro simulado ao buscar clientes.");
            setLoading(false);
          }
        }, 1500); // 1500ms = 1.5 segundos
      };

      simulaFetchClientes();
    }
  }, [tab]);

  // A função renderClientList e o resto do componente permanecem IGUAIS
  const renderClientList = () => {
    if (loading) {
      return <div className="text-center text-gray-600">Carregando clientes...</div>;
    }

    if (error) {
      return <div className="text-center text-red-600">Erro: {error}</div>;
    }

    if (clientes.length === 0) {
      return (
        <div className="text-center text-gray-600">
          <p>Nenhum cliente cadastrado ainda.</p>
        </div>
      );
    }

    return (
      <div className="overflow-x-auto">
        <table className="min-w-full bg-white border border-gray-200">
          <thead className="bg-gray-50">
            <tr>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nome</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Telefone</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ações</th>
            </tr>
          </thead>
          <tbody className="divide-y divide-gray-200">
            {clientes.map((cliente) => (
              <tr key={cliente.id}>
                <td className="px-6 py-4 whitespace-nowrap">{cliente.nome}</td>
                <td className="px-6 py-4 whitespace-nowrap">{cliente.email}</td>
                <td className="px-6 py-4 whitespace-nowrap">{cliente.telefone}</td>
                <td className="px-6 py-4 whitespace-nowrap">
                  <button className="text-indigo-600 hover:text-indigo-900">Editar</button>
                  <button className="text-red-600 hover:text-red-900 ml-4">Excluir</button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    );
  };

  return (
    <div className="p-10 m-6 bg-white rounded-xl shadow-[0_4px_30px_rgba(0,0,0,0.15)] max-w-8xl mx-6 mt-40">
      {tab === "clientes" && (
        <>
          <h2 className="text-2xl font-bold mb-4 text-gray-800 text-center">CLIENTES</h2>
          <div className="flex justify-end mb-6">
            <button
              onClick={() => setTab("cadastro")}
              className="bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-2 px-4 rounded-lg transition-all"
            >
              + Cadastrar Novo Cliente
            </button>
          </div>
          {renderClientList()}
        </>
      )}

      {tab === "cadastro" && (
        <div className="p-10 m-6 bg-white rounded-xl shadow-[0_4px_30px_rgba(0,0,0,0.15)] max-w-8xl mx-0">
          <div className="flex justify-end mb-6">
            <button
              onClick={() => setTab("clientes")}
              className="bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-4 rounded-lg transition-all"
            >
              ← Voltar à Lista
            </button>
          </div>
          <CadastroClientes />
        </div>
      )}
    </div>
  );
}

*/}